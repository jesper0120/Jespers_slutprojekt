<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="access" xml:space="preserve">
    <value>Access Consciousness</value>
  </data>
  <data name="accessBars" xml:space="preserve">
    <value>Do you want a change that changes your whole life in just one session? In the Access Bars treatment, the worst thing you can get is a good massage and the best thing you can experience is that your whole life takes the direction you wanted or even better a direction towards what your higher self strives for. Access Bars is a treatment where 32 different points (or bars) are held by the therapist in different combinations. The points can help the client with relationships, money, happiness and sadness, peace and tranquility, aging, hopes and dreams, control, the body, sex, as well as communication etc. Bars help you electromagnetically release old patterns and limitations you have created based on your fixed points of view. Worth knowing may be that when Bars run on children, it can cause their grades to dramatically improve. Do you want help with sleeping better? Run your bars.</value>
  </data>
  <data name="accessMTVSS" xml:space="preserve">
    <value>Access MTVSS is a hands-on (hands-on-body) treatment that involves restoring the cells to their origin. That is, if the skin and or the tissue and muscles under the skin have suffered some damage, e.g. inflammation, burns, wear and tear, etc., then this treatment can help the body's own healing back to its origin.</value>
  </data>
  <data name="bookings" xml:space="preserve">
    <value>Bookings</value>
  </data>
  <data name="bookTreatment" xml:space="preserve">
    <value>Book a treatment.</value>
  </data>
  <data name="contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="coursesAndTreatments" xml:space="preserve">
    <value>Courses And Treatments</value>
  </data>
  <data name="createBooking" xml:space="preserve">
    <value>Book a treatment or class</value>
  </data>
  <data name="exciting" xml:space="preserve">
    <value>Does that sound exciting? What would happen if you book an appointment?</value>
  </data>
  <data name="mtReview" xml:space="preserve">
    <value>After days, maybe weeks of fatigue, Jesper came to visit :-), we were going to change Bars, but for some strange reason he started to do a lot of clearing processes on me about the fatigue. Does it belong to me? Someone else's? Or maybe it's something else's? I do not really remember everything, but with the finesse and sensitivity that Jesper possesses, he found the right words and they went straight into "right on spot" as it is called! Right on the spot !. We changed Bars and parted. The next day I went away with a couple of friends, the tiredness blown away, my self-esteem strengthened and life so much easier! After that, I have not felt the chronic fatigue that I have been carrying for several years.</value>
  </data>
  <data name="quotes" xml:space="preserve">
    <value>Quotes</value>
  </data>
  <data name="treatments" xml:space="preserve">
    <value>Treatments</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="whatHappened" xml:space="preserve">
    <value>What happened for you during the treatment and after you received Acccess Bars:</value>
  </data>
  <data name="worldpeace" xml:space="preserve">
    <value>World Peace</value>
  </data>
</root>